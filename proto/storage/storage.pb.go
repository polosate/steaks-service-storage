// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/storage/storage.proto

package steaks_storage_service

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Storage struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Capacity             int32    `protobuf:"varint,2,opt,name=capacity,proto3" json:"capacity,omitempty"`
	Name                 string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Available            bool     `protobuf:"varint,5,opt,name=available,proto3" json:"available,omitempty"`
	OwnerId              string   `protobuf:"bytes,6,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Storage) Reset()         { *m = Storage{} }
func (m *Storage) String() string { return proto.CompactTextString(m) }
func (*Storage) ProtoMessage()    {}
func (*Storage) Descriptor() ([]byte, []int) {
	return fileDescriptor_c87989e2875259d4, []int{0}
}

func (m *Storage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Storage.Unmarshal(m, b)
}
func (m *Storage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Storage.Marshal(b, m, deterministic)
}
func (m *Storage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Storage.Merge(m, src)
}
func (m *Storage) XXX_Size() int {
	return xxx_messageInfo_Storage.Size(m)
}
func (m *Storage) XXX_DiscardUnknown() {
	xxx_messageInfo_Storage.DiscardUnknown(m)
}

var xxx_messageInfo_Storage proto.InternalMessageInfo

func (m *Storage) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Storage) GetCapacity() int32 {
	if m != nil {
		return m.Capacity
	}
	return 0
}

func (m *Storage) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Storage) GetAvailable() bool {
	if m != nil {
		return m.Available
	}
	return false
}

func (m *Storage) GetOwnerId() string {
	if m != nil {
		return m.OwnerId
	}
	return ""
}

type Specification struct {
	Capacity             int32    `protobuf:"varint,1,opt,name=capacity,proto3" json:"capacity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Specification) Reset()         { *m = Specification{} }
func (m *Specification) String() string { return proto.CompactTextString(m) }
func (*Specification) ProtoMessage()    {}
func (*Specification) Descriptor() ([]byte, []int) {
	return fileDescriptor_c87989e2875259d4, []int{1}
}

func (m *Specification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Specification.Unmarshal(m, b)
}
func (m *Specification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Specification.Marshal(b, m, deterministic)
}
func (m *Specification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Specification.Merge(m, src)
}
func (m *Specification) XXX_Size() int {
	return xxx_messageInfo_Specification.Size(m)
}
func (m *Specification) XXX_DiscardUnknown() {
	xxx_messageInfo_Specification.DiscardUnknown(m)
}

var xxx_messageInfo_Specification proto.InternalMessageInfo

func (m *Specification) GetCapacity() int32 {
	if m != nil {
		return m.Capacity
	}
	return 0
}

type Response struct {
	Storage              *Storage   `protobuf:"bytes,1,opt,name=storage,proto3" json:"storage,omitempty"`
	Storages             []*Storage `protobuf:"bytes,2,rep,name=storages,proto3" json:"storages,omitempty"`
	Created              bool       `protobuf:"varint,3,opt,name=created,proto3" json:"created,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_c87989e2875259d4, []int{2}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetStorage() *Storage {
	if m != nil {
		return m.Storage
	}
	return nil
}

func (m *Response) GetStorages() []*Storage {
	if m != nil {
		return m.Storages
	}
	return nil
}

func (m *Response) GetCreated() bool {
	if m != nil {
		return m.Created
	}
	return false
}

func init() {
	proto.RegisterType((*Storage)(nil), "steaks.storage.service.Storage")
	proto.RegisterType((*Specification)(nil), "steaks.storage.service.Specification")
	proto.RegisterType((*Response)(nil), "steaks.storage.service.Response")
}

func init() { proto.RegisterFile("proto/storage/storage.proto", fileDescriptor_c87989e2875259d4) }

var fileDescriptor_c87989e2875259d4 = []byte{
	// 296 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0x41, 0x4b, 0xc3, 0x30,
	0x18, 0x35, 0xdd, 0xd6, 0x76, 0x9f, 0x6c, 0x87, 0xef, 0x20, 0x71, 0x0a, 0x96, 0x82, 0x50, 0x10,
	0x2a, 0xcc, 0x93, 0x78, 0x12, 0x41, 0xf0, 0xe0, 0xa5, 0xbd, 0x79, 0x91, 0x2c, 0xf9, 0x94, 0xe0,
	0x6c, 0x4a, 0x13, 0x26, 0x5e, 0xfd, 0x1d, 0xfe, 0x13, 0xff, 0x9c, 0x90, 0xb5, 0xd5, 0x81, 0xc3,
	0x9d, 0xf2, 0xbd, 0xc7, 0x7b, 0x79, 0x79, 0x1f, 0x81, 0xa3, 0xba, 0x31, 0xce, 0x9c, 0x5b, 0x67,
	0x1a, 0xf1, 0x4c, 0xdd, 0x99, 0x7b, 0x16, 0x0f, 0xac, 0x23, 0xf1, 0x62, 0xf3, 0x8e, 0xb5, 0xd4,
	0xac, 0xb4, 0xa4, 0xf4, 0x83, 0x41, 0x54, 0xae, 0x39, 0x9c, 0x42, 0xa0, 0x15, 0x67, 0x09, 0xcb,
	0x46, 0x45, 0xa0, 0x15, 0xce, 0x20, 0x96, 0xa2, 0x16, 0x52, 0xbb, 0x77, 0x1e, 0x78, 0xb6, 0xc7,
	0x88, 0x30, 0xac, 0xc4, 0x2b, 0xf1, 0x61, 0xc2, 0xb2, 0x71, 0xe1, 0x67, 0x3c, 0x86, 0xb1, 0x58,
	0x09, 0xbd, 0x14, 0x8b, 0x25, 0xf1, 0x51, 0xc2, 0xb2, 0xb8, 0xf8, 0x21, 0xf0, 0x10, 0x62, 0xf3,
	0x56, 0x51, 0xf3, 0xa8, 0x15, 0x0f, 0xbd, 0x2b, 0xf2, 0xf8, 0x4e, 0xa5, 0x67, 0x30, 0x29, 0x6b,
	0x92, 0xfa, 0x49, 0x4b, 0xe1, 0xb4, 0xa9, 0x36, 0x92, 0xd9, 0x66, 0x72, 0xfa, 0xc9, 0x20, 0x2e,
	0xc8, 0xd6, 0xa6, 0xb2, 0x84, 0x97, 0x10, 0xb5, 0x8d, 0xbc, 0x6e, 0x7f, 0x7e, 0x92, 0xff, 0x5d,
	0x34, 0x6f, 0x4b, 0x16, 0x9d, 0x1e, 0xaf, 0x20, 0x6e, 0x47, 0xcb, 0x83, 0x64, 0xb0, 0x8b, 0xb7,
	0x37, 0x20, 0x87, 0x48, 0x36, 0x24, 0x1c, 0x29, 0x3e, 0xf0, 0x45, 0x3b, 0x38, 0xff, 0x62, 0x30,
	0x6d, 0xf5, 0xe5, 0xda, 0x8e, 0x0f, 0x30, 0xb9, 0xd5, 0x95, 0xba, 0xee, 0x57, 0x71, 0xba, 0x35,
	0xe8, 0xf7, 0x16, 0x66, 0xc9, 0x36, 0x59, 0x57, 0x3f, 0xdd, 0xc3, 0x7b, 0x08, 0x6f, 0x7c, 0x32,
	0xfe, 0xf7, 0xfa, 0x5d, 0xae, 0x5b, 0x84, 0xfe, 0xb7, 0x5c, 0x7c, 0x07, 0x00, 0x00, 0xff, 0xff,
	0x64, 0x07, 0xe9, 0x6a, 0x4c, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for StorageService service

type StorageServiceClient interface {
	FindAvailable(ctx context.Context, in *Specification, opts ...client.CallOption) (*Response, error)
	Create(ctx context.Context, in *Storage, opts ...client.CallOption) (*Response, error)
}

type storageServiceClient struct {
	c           client.Client
	serviceName string
}

func NewStorageServiceClient(serviceName string, c client.Client) StorageServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "steaks.storage.service"
	}
	return &storageServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *storageServiceClient) FindAvailable(ctx context.Context, in *Specification, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "StorageService.FindAvailable", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageServiceClient) Create(ctx context.Context, in *Storage, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "StorageService.Create", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for StorageService service

type StorageServiceHandler interface {
	FindAvailable(context.Context, *Specification, *Response) error
	Create(context.Context, *Storage, *Response) error
}

func RegisterStorageServiceHandler(s server.Server, hdlr StorageServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&StorageService{hdlr}, opts...))
}

type StorageService struct {
	StorageServiceHandler
}

func (h *StorageService) FindAvailable(ctx context.Context, in *Specification, out *Response) error {
	return h.StorageServiceHandler.FindAvailable(ctx, in, out)
}

func (h *StorageService) Create(ctx context.Context, in *Storage, out *Response) error {
	return h.StorageServiceHandler.Create(ctx, in, out)
}
